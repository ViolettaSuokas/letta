---
import CircleBorder from "./SVG/CircleBorder.astro";
import { getLangFromUrl } from "@Utils/defaultLang.ts";
import type { INavigation } from "@Types";
import TopNavigationMobMenu from "./TopNavigationMobMenu.astro";

const lang = getLangFromUrl(Astro.url);
interface Props extends INavigation {}
const { links } = Astro.props;
---

<nav
  class="header__nav"
  aria-label="logo, switch language and mobile navigation"
>
  <a href="/" class="nav__logo color-white">letta</a>
  <a
    href="/en"
    class=`${lang == 'en' ? 'nav__nav-btn lang-btn color-white active' : 'nav__nav-btn lang-btn color-white'}`
    >EN <CircleBorder /></a
  >
  <a
    href="/"
    class=`${lang == 'fi' ? 'nav__nav-btn lang-btn color-white active' : 'nav__nav-btn lang-btn color-white'}`
    >FI <CircleBorder /></a
  >
  <TopNavigationMobMenu links={links} />
</nav>

<style>
  .header__nav {
    grid-column: 2 / -2;
    grid-row: 1;
    align-self: flex-start;
    align-items: center;
    display: grid;
    grid-template-columns: 1fr auto auto auto;
    column-gap: var(--gap-16);
    padding-block: var(--gap-24);
  }

  /* common button class */
  :global(.nav__nav-btn) {
    inline-size: var(--size-48);
    aspect-ratio: 1;
    position: relative;
    display: grid;
    place-content: center;
    transition: all var(--transition-03) ease-in-out;
  }
  .lang-btn {
    opacity: 0.5;
  }

  .lang-btn:is(:hover, .active) {
    opacity: 1;
  }

  /* Path hover effect */
  .lang-btn:is(:hover, .active) :global(.border-cirle-path) {
    stroke-dashoffset: -40;
  }
</style>
