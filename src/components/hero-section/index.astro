---
import CenterNavigation from "./Navigation.astro";
import MainTitle from "./SVG/MainTitle.astro";
import DaisyFlower from "./DaisyFlower.astro";
import ArrowUnderMenu from "./SVG/ArrowUnderMenu.astro";

import type { INavigation, IHero } from "@Types";

interface Props {
  links: INavigation;
  hero: IHero;
}

const { links, hero } = Astro.props;
---

<section class="grid hero">
  <ArrowUnderMenu extraClass="hero__arrow-mobile" />
  <MainTitle />
  <h1 class="hero__title color-light-grey">
    {hero.title}
  </h1>
  <a href="#work" class="hero__button color-white" type="button">
    {hero.name.split(hero.style)}
    <strong class="color-purpul">{hero.style}</strong>
  </a>
  <CenterNavigation links={links.links} />
  <DaisyFlower />
</section>

<style>
  .hero {
    grid-template-rows: 20vh repeat(3, min-content) 250px;
    position: relative;
    overflow: hidden;
    padding-block-end: var(--gap-36);
  }

  .hero__title,
  .hero__button {
    grid-column: 3 / 8;
    align-self: center;
    font-size: clamp(var(--font-18), 2.5vw, var(--font-36));
  }

  .hero__title {
    grid-row: 3;
    padding-block: var(--gap-48) var(--gap-80);
    font-weight: 400;
    line-height: 1.4;
  }

  .hero__button {
    grid-row: 4;
    justify-self: flex-start;
    padding-inline: var(--gap-24);
    padding-block: var(--gap-16);
    position: relative;
    top: 0;
    background-color: var(--bg-black);

    border-color: hsl(242 100% 85% / 0.5);
    border-width: 3px;
    border-style: solid;
    border-radius: var(--border-corner-16);
    box-shadow: inset 0 0 0 0 var(--color-purpul);
    text-transform: uppercase;
    transition:
      top var(--transition-01) ease-in-out,
      border var(--transition-03) ease-in-out;
  }

  .hero__button::after {
    content: "";
    inline-size: calc(100% + 3px);
    block-size: calc(100% + 3px);
    position: absolute;
    top: 1rem;
    left: 1rem;
    border-color: var(--color-pink);
    border-width: inherit;
    border-style: inherit;
    border-radius: inherit;
    transition:
      top var(--transition-01) ease-in-out,
      left var(--transition-01) ease-in-out,
      border-color var(--transition-03) ease-in-out;
    pointer-events: none;
    z-index: -1;
  }

  .hero__button:active {
    top: 0.25rem;
  }

  .hero__button:hover {
    border-color: var(--color-purpul);
  }

  .hero__button:hover::after {
    border-color: hsl(298 100% 94% / 0.5);
  }
  .hero__button:active::after {
    top: 0.5rem;
    left: 0.5rem;
    border-color: hsl(298 100% 94% / 0.5);
  }

  /* MEDIA QUERIES */
  @media screen and (max-width: 960px) {
    .hero {
      block-size: 100%;
    }
    .hero__title,
    .hero__button {
      grid-column: 2 / -2;
      align-self: center;
      font-size: clamp(var(--font-18), 4vw, var(--font-36));
    }
  }

  @media (max-width: 559px) {
    .hero {
      grid-template-rows: 20vh repeat(3, min-content) 180px;
    }
    .hero__daisy-flower {
      grid-column: 5;
      inline-size: 200px;
      left: 30%;
    }
    .hero__title {
      padding-block: var(--gap-32) var(--gap-48);
    }
    .hero__button {
      border-width: 3px;
    }
    .hero__button::after {
      top: 0.8rem;
      left: 0.8rem;
    }
  }

  @media only screen and (orientation: landscape) and (max-device-height: 768px) {
    .hero {
      grid-template-rows: 20vh repeat(3, min-content) 250px;
    }
  }
</style>
