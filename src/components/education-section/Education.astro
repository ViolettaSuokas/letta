---
import Diplom from "./SVG/Diplom.astro";
import DiplomEmpty from "./SVG/DiplomEmpty.astro";
import Stamp from "./SVG/Stamp.astro";
import TitleDiplom from "./TitleDiplom.astro";
// Types
import type { IEducation } from "@Types";
interface Props {
  data: IEducation | { isEmpty: boolean };
}
// Props
const { data } = Astro.props;
// Code
let title = [""];
if (typeof data === "object" && "title" in data) {
  title = data.title.split(data.part);
}
---

{
  typeof data === "object" && "title" in data ? (
    <li class={`education not-empty`}>
      <TitleDiplom title={title} style={data.style} part={data.part} />
      <p class="education__txt color-grey">{data.description}</p>
      <Diplom style={data.style} />
      <Stamp style={data.style} />
    </li>
  ) : (
    <li class={`education is-empty`}>
      <DiplomEmpty />
    </li>
  )
}

<style>
  .education {
    aspect-ratio: 1 / 1.3;
    display: grid;
    row-gap: var(--gap-24);
    position: relative;
  }
  .education.not-empty {
    max-inline-size: 360px;
    padding-inline: var(--gap-32) var(--gap-48);
    padding-block: var(--gap-80) var(--gap-48);
  }
  .education.is-empty {
    inline-size: 360px;
  }

  .education__txt {
    line-height: 1.3;
    max-inline-size: calc(100% - 2rem);
    font-size: clamp(var(--font-16), 4.5vw, var(--font-20));
  }

  @media screen and (max-width: 800px) {
    .education {
      inline-size: auto;
      justify-self: center;
      max-inline-size: 360px;
      padding-inline: var(--gap-24) var(--gap-32);
    }
    .education.is-empty {
      display: none;
    }
  }
</style>
